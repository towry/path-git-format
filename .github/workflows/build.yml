name: nix ci

on:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}

env:
  SPEC_SPLIT_DOTS: 160
  CI_NIX_SHELL: true

jobs:
  release-build:
    strategy:
      fail-fast: false
      matrix:
        runner: [macos-12, macos-14]
        include:
          - runner: macos-12
            arch: x86_64
            name: path-git-format-${{ github.ref_name }}-x86_64-darwin.tar.gz
          - runner: macos-14
            name: path-git-format-${{ github.ref_name }}-aarch64-darwin.tar.gz
            arch: arm64
    runs-on: ${{ matrix.runner }}
    steps:
      - name: Download source
        uses: actions/checkout@v4
      - uses: cachix/install-nix-action@v26
        with:
          install_url: https://releases.nixos.org/nix/nix-2.22.1/install
          extra_nix_config: |
            experimental-features = nix-command flakes
      - uses: cachix/cachix-action@v14
        if: ${{ success() }}
        with:
          name: towry
          authToken: "${{ secrets.CACHIX_AUTH_TOKEN }}"
      - name: Enter env
        run: nix develop
      - name: build
        if: ${{ success() }}
        run: make release && tar -czvf ${{ matrix.name }} -C ./target/release/ path-git-format
      - uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.name }}
          path: |
            ${{ matrix.name }}
          retention-days: 1

  release:
    permissions:
      contents: write
    runs-on: ubuntu-latest
    needs: [release-build]
    steps:
      - uses: actions/download-artifact@v4
        with:
          merge-multiple: true
      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          draft: true
          files: |
            path-git-*.tar.gz
          generate_release_notes: true
