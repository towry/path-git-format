name: "Build release artifacts"

on:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}

env:
  SPEC_SPLIT_DOTS: 160
  CI_NIX_SHELL: true

permissions:
  contents: write

jobs:
  release-build:
    strategy:
      fail-fast: false
      matrix:
        runner: [macos-14]
        include:
          - runner: macos-14
            name: path-git-format-${{ github.ref_name }}-aarch64-darwin.tar.gz
            arch: arm64
    runs-on: ${{ matrix.runner }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install Rust toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: stable

      - name: Cache cargo artifacts
        uses: Swatinem/rust-cache@v2
        with:
          prefix-key: "v1-rust-build"

      - name: Build release binary
        run: cargo build --release --verbose

      - name: Package artifact
        shell: bash
        run: |
          version="${{ github.ref_name }}"
          version="${version#v}"
          staging="path-git-format-${version}-${{ matrix.arch }}-darwin"
          mkdir -p "$staging"
          cp README.md "$staging/"
          cp target/release/path-git-format "$staging/"
          if [ -f "LICENSE" ]; then
            cp LICENSE "$staging/"
          fi
          tar czf "${{ matrix.name }}" "$staging"

      - name: Generate checksum
        shell: bash
        run: |
          if command -v sha256sum >/dev/null 2>&1; then
            sha256sum "${{ matrix.name }}" > "${{ matrix.name }}.sha256"
          elif command -v shasum >/dev/null 2>&1; then
            shasum -a 256 "${{ matrix.name }}" > "${{ matrix.name }}.sha256"
          fi

      - name: Upload asset
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ github.ref_name }}
          artifacts: ${{ matrix.name }}
          allowUpdates: true
          omitBodyDuringUpdate: true
          omitNameDuringUpdate: true
          omitPrereleaseDuringUpdate: true

      - name: Generate binary info
        shell: bash
        run: |
          echo "### Build Information for macOS ${{ matrix.arch }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Architecture**: ${{ matrix.arch }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Artifact**: ${{ matrix.name }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Size**: $(du -h ${{ matrix.name }} | cut -f1)" >> $GITHUB_STEP_SUMMARY
          if [ -f "${{ matrix.name }}.sha256" ]; then
            echo "- **Checksum**:" >> $GITHUB_STEP_SUMMARY
            echo '```' >> $GITHUB_STEP_SUMMARY
            cat "${{ matrix.name }}.sha256" >> $GITHUB_STEP_SUMMARY
            echo '```' >> $GITHUB_STEP_SUMMARY
          fi
